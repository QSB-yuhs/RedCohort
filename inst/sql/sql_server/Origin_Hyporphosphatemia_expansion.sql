CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (435788)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (435788)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (435788)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (435788)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (19035631,19014202)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (19035631,19014202)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (19035631,19014202)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (19035631,19014202)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (35624485,4223448,140362,36715574,4034970,22856)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (35624485,4223448,140362,36715574,4034970,22856)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (35624485,4223448,140362,36715574,4034970,22856)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (35624485,4223448,140362,36715574,4034970,22856)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (40708527,40708526,40708525,40706775,40706774,40706773,41430642,41430645,41430646,21108646,43198335,43197769,41502495,1729323,42941561,42941555,42941562,42941566,42941556,42941557,44055556,42941558,42941553,42941563,42941567,42941559,42941564,42941554,42941560,42941565,42941568,42941569,42941543,42941537,42941544,42941548,42941538,42941539,44100333,44039017,42941540,42941535,42941545,42941549,42941541,42941546,21065562,41232009,40950625,41169532,41318716,41325253,40950624,41200949,41200948,41044161,42941536,42941542,42941547,42941551,42941552,43172143,43183121,43150007,40168219,40168222,40168220,40168221,40133589,42941578,42941572,42941579,42941573,42941574,44070808,42941575,42941570,42941580,42941584,42941576,40133590,42941571,42941577,42941582,42941585,42941586,964015,1560078,21149330,43158209,42874221,42874222,36893513,21149331,21060949,21169052,21100249,21041342,43191063,43191064,43212957,43169085,35770064,43147024,21100250,21080573,21110077,41315791,44089712,41118016,42874226,42874224,42874225,43026751,35200464,35200465,43026753,43026754,43026756,43026757,43026758,43026755,35200467,35200466,35200468,43178107,36788478,40134707,782835,782836,35201132,964218,964224,21043604,782837,36788477,43210853,43144918,43210854,35764515,35747851,36788476,36788475,36788474,36788473,36788472,43156113,43026151,43026150,43026153,43026148,43026152,43026149,43026147,36788471,21161459,21023930,21102497,43026159,21112307,21171239,782838,782840,782842,782843,782844,782845,782846,21033713,43026156,40746924,43026155,43026158,40746925,43026157,40746923,43026154,782841,40746927,40746928,40746926,40971273,40855382,40917587,40855384,41323445,41323444,40825359,41136543,41073667,40886688,41136544,41252484,40855383,41323443,41148916,41148915,19124373,19124374,1510223,40166596,1510227,1703069,43212854,43190965,40241981,21134056,21094460,43202121,36503440,994686,43147025,36509698,994687,36814491,40124351,36882760,782823,782822,21114143,40827062,40929850,40971262,41086186,1703095,19042160,1703096,1703097,43194213,35606582,35606581,35606583,35606584,35606586,35606585,35606587,35606590,35606589,35606591,19103067,42965766,21055612,43190966,43202023,43212855,35772093,43190967,21143972,42965765,21143973,21104774,21085112,21173500,40860485,44115232,40909013,41159218,41136534,41167763,44171443,41260970,41323435,40940281,44186404,44186403,41242323,40961170,40241984,40241982,40241983,782825,782824,21143561,782831,782833,782826,782828,782829,782830,21173067,21035534,21104377,21094461,782834,36812938,36881718,43212958,43191065,43202122,43158210,43169086,43026164,43026163,43026166,43026161,43026165,43026162,43026160,36257199,36813059,36812153,36813248,36811149,36268197,36271211,40746910,36275044,40746915,40746911,43026169,40746914,43026168,43026171,40746913,43026167,43026170,40746912,40746916,40746921,40746917,40746920,40746919,40746918,40746922,41042358,40948925,40917580,41260969,41260968,40917578,41136533,40855375,40886680,41136532,40948924,41221487,44182671,41042359,40992430,40867643,19063361,19042159,19102500,19102831,41260971,41167764,41292116,21104771,19124342,40134179,42543871,42543875,1511230,42543874,1511229,42543872,42543878,1511233,1710281,43202117,43180170,36813154,41245640,40865165,43212951,43212952,43037156,41301770,41089547,41152357,41226323,40720627,40927355,43202119,43202120,43147023,40720650,43037158,40720648,40720649,43212953,43180173,43037170,41057983,40720647,40896365,42927729,42927728,42927720,42927736,42927737,42927725,42927726,42927721,42927722,42927730,42927738,42927723,995223,36258999,42927731,42927739,42927735,42927733,42927724,43169082,36262483,36261430,43169084,43212955,41288218,41195246,44166854,41257155,41132577,44185539,44174336,40882847,44166855,41288215,44170586,44181824,40824389,41038514,40913803,41069781,36504821,37593516,43037165,43037163,43037162,43037160,43037164,43037161,43037159,41239851,37593512,37593513,37593515,37593514,36508021,36506462,42927697,42927707,42927706,42927698,42927714,42927715,42927703,42927699,42927700,42927708,42927712,995224,995225,36267644,36275271,36268634,42927709,42927717,42927710,42927713,41214714,40882849,41069786,44163052,41226321,41007448,40825633,40851568,40882846,40976105,41226319,44170585,41226318,40851565,40976104,40945117,40976102,41226322,40851567,41195245,36509195,40720628,37593520,42927711,42927718,42927702,36811452,36812767,41239853,40720633,40720636,40720635,40720629,43037169,43037167,40720632,43037166,40720631,40720634,43037168,40720630,40720637,36419350,41239852,40720642,40720645,40720644,37593517,40720638,40720641,37593519,37593518,995226,40720640,40720643,36507464,40720639,40720646,43589260,35156246,43661593,43733307,35146811,43516046,43515541,43180169,43158205,42705927,42708120,42708121,42705915,42705916,42708114,42708115,42705917,42705918,42708116,42708117,42705878,42705879,42708096,42708097,1710314,1710312,19098330,43212950,43136093,42705926,40133800,42927751,42927742,42927759,42927747,42927748,42927752,42927745,43733306,42927753,42927761,42927754,35133027,42927757,42927755,42927762)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (40708527,40708526,40708525,40706775,40706774,40706773,41430642,41430645,41430646,21108646,43198335,43197769,41502495,1729323,42941561,42941555,42941562,42941566,42941556,42941557,44055556,42941558,42941553,42941563,42941567,42941559,42941564,42941554,42941560,42941565,42941568,42941569,42941543,42941537,42941544,42941548,42941538,42941539,44100333,44039017,42941540,42941535,42941545,42941549,42941541,42941546,21065562,41232009,40950625,41169532,41318716,41325253,40950624,41200949,41200948,41044161,42941536,42941542,42941547,42941551,42941552,43172143,43183121,43150007,40168219,40168222,40168220,40168221,40133589,42941578,42941572,42941579,42941573,42941574,44070808,42941575,42941570,42941580,42941584,42941576,40133590,42941571,42941577,42941582,42941585,42941586,964015,1560078,21149330,43158209,42874221,42874222,36893513,21149331,21060949,21169052,21100249,21041342,43191063,43191064,43212957,43169085,35770064,43147024,21100250,21080573,21110077,41315791,44089712,41118016,42874226,42874224,42874225,43026751,35200464,35200465,43026753,43026754,43026756,43026757,43026758,43026755,35200467,35200466,35200468,43178107,36788478,40134707,782835,782836,35201132,964218,964224,21043604,782837,36788477,43210853,43144918,43210854,35764515,35747851,36788476,36788475,36788474,36788473,36788472,43156113,43026151,43026150,43026153,43026148,43026152,43026149,43026147,36788471,21161459,21023930,21102497,43026159,21112307,21171239,782838,782840,782842,782843,782844,782845,782846,21033713,43026156,40746924,43026155,43026158,40746925,43026157,40746923,43026154,782841,40746927,40746928,40746926,40971273,40855382,40917587,40855384,41323445,41323444,40825359,41136543,41073667,40886688,41136544,41252484,40855383,41323443,41148916,41148915,19124373,19124374,1510223,40166596,1510227,1703069,43212854,43190965,40241981,21134056,21094460,43202121,36503440,994686,43147025,36509698,994687,36814491,40124351,36882760,782823,782822,21114143,40827062,40929850,40971262,41086186,1703095,19042160,1703096,1703097,43194213,35606582,35606581,35606583,35606584,35606586,35606585,35606587,35606590,35606589,35606591,19103067,42965766,21055612,43190966,43202023,43212855,35772093,43190967,21143972,42965765,21143973,21104774,21085112,21173500,40860485,44115232,40909013,41159218,41136534,41167763,44171443,41260970,41323435,40940281,44186404,44186403,41242323,40961170,40241984,40241982,40241983,782825,782824,21143561,782831,782833,782826,782828,782829,782830,21173067,21035534,21104377,21094461,782834,36812938,36881718,43212958,43191065,43202122,43158210,43169086,43026164,43026163,43026166,43026161,43026165,43026162,43026160,36257199,36813059,36812153,36813248,36811149,36268197,36271211,40746910,36275044,40746915,40746911,43026169,40746914,43026168,43026171,40746913,43026167,43026170,40746912,40746916,40746921,40746917,40746920,40746919,40746918,40746922,41042358,40948925,40917580,41260969,41260968,40917578,41136533,40855375,40886680,41136532,40948924,41221487,44182671,41042359,40992430,40867643,19063361,19042159,19102500,19102831,41260971,41167764,41292116,21104771,19124342,40134179,42543871,42543875,1511230,42543874,1511229,42543872,42543878,1511233,1710281,43202117,43180170,36813154,41245640,40865165,43212951,43212952,43037156,41301770,41089547,41152357,41226323,40720627,40927355,43202119,43202120,43147023,40720650,43037158,40720648,40720649,43212953,43180173,43037170,41057983,40720647,40896365,42927729,42927728,42927720,42927736,42927737,42927725,42927726,42927721,42927722,42927730,42927738,42927723,995223,36258999,42927731,42927739,42927735,42927733,42927724,43169082,36262483,36261430,43169084,43212955,41288218,41195246,44166854,41257155,41132577,44185539,44174336,40882847,44166855,41288215,44170586,44181824,40824389,41038514,40913803,41069781,36504821,37593516,43037165,43037163,43037162,43037160,43037164,43037161,43037159,41239851,37593512,37593513,37593515,37593514,36508021,36506462,42927697,42927707,42927706,42927698,42927714,42927715,42927703,42927699,42927700,42927708,42927712,995224,995225,36267644,36275271,36268634,42927709,42927717,42927710,42927713,41214714,40882849,41069786,44163052,41226321,41007448,40825633,40851568,40882846,40976105,41226319,44170585,41226318,40851565,40976104,40945117,40976102,41226322,40851567,41195245,36509195,40720628,37593520,42927711,42927718,42927702,36811452,36812767,41239853,40720633,40720636,40720635,40720629,43037169,43037167,40720632,43037166,40720631,40720634,43037168,40720630,40720637,36419350,41239852,40720642,40720645,40720644,37593517,40720638,40720641,37593519,37593518,995226,40720640,40720643,36507464,40720639,40720646,43589260,35156246,43661593,43733307,35146811,43516046,43515541,43180169,43158205,42705927,42708120,42708121,42705915,42705916,42708114,42708115,42705917,42705918,42708116,42708117,42705878,42705879,42708096,42708097,1710314,1710312,19098330,43212950,43136093,42705926,40133800,42927751,42927742,42927759,42927747,42927748,42927752,42927745,43733306,42927753,42927761,42927754,35133027,42927757,42927755,42927762)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (40708527,40708526,40708525,40706775,40706774,40706773,41430642,41430645,41430646,21108646,43198335,43197769,41502495,1729323,42941561,42941555,42941562,42941566,42941556,42941557,44055556,42941558,42941553,42941563,42941567,42941559,42941564,42941554,42941560,42941565,42941568,42941569,42941543,42941537,42941544,42941548,42941538,42941539,44100333,44039017,42941540,42941535,42941545,42941549,42941541,42941546,21065562,41232009,40950625,41169532,41318716,41325253,40950624,41200949,41200948,41044161,42941536,42941542,42941547,42941551,42941552,43172143,43183121,43150007,40168219,40168222,40168220,40168221,40133589,42941578,42941572,42941579,42941573,42941574,44070808,42941575,42941570,42941580,42941584,42941576,40133590,42941571,42941577,42941582,42941585,42941586,964015,1560078,21149330,43158209,42874221,42874222,36893513,21149331,21060949,21169052,21100249,21041342,43191063,43191064,43212957,43169085,35770064,43147024,21100250,21080573,21110077,41315791,44089712,41118016,42874226,42874224,42874225,43026751,35200464,35200465,43026753,43026754,43026756,43026757,43026758,43026755,35200467,35200466,35200468,43178107,36788478,40134707,782835,782836,35201132,964218,964224,21043604,782837,36788477,43210853,43144918,43210854,35764515,35747851,36788476,36788475,36788474,36788473,36788472,43156113,43026151,43026150,43026153,43026148,43026152,43026149,43026147,36788471,21161459,21023930,21102497,43026159,21112307,21171239,782838,782840,782842,782843,782844,782845,782846,21033713,43026156,40746924,43026155,43026158,40746925,43026157,40746923,43026154,782841,40746927,40746928,40746926,40971273,40855382,40917587,40855384,41323445,41323444,40825359,41136543,41073667,40886688,41136544,41252484,40855383,41323443,41148916,41148915,19124373,19124374,1510223,40166596,1510227,1703069,43212854,43190965,40241981,21134056,21094460,43202121,36503440,994686,43147025,36509698,994687,36814491,40124351,36882760,782823,782822,21114143,40827062,40929850,40971262,41086186,1703095,19042160,1703096,1703097,43194213,35606582,35606581,35606583,35606584,35606586,35606585,35606587,35606590,35606589,35606591,19103067,42965766,21055612,43190966,43202023,43212855,35772093,43190967,21143972,42965765,21143973,21104774,21085112,21173500,40860485,44115232,40909013,41159218,41136534,41167763,44171443,41260970,41323435,40940281,44186404,44186403,41242323,40961170,40241984,40241982,40241983,782825,782824,21143561,782831,782833,782826,782828,782829,782830,21173067,21035534,21104377,21094461,782834,36812938,36881718,43212958,43191065,43202122,43158210,43169086,43026164,43026163,43026166,43026161,43026165,43026162,43026160,36257199,36813059,36812153,36813248,36811149,36268197,36271211,40746910,36275044,40746915,40746911,43026169,40746914,43026168,43026171,40746913,43026167,43026170,40746912,40746916,40746921,40746917,40746920,40746919,40746918,40746922,41042358,40948925,40917580,41260969,41260968,40917578,41136533,40855375,40886680,41136532,40948924,41221487,44182671,41042359,40992430,40867643,19063361,19042159,19102500,19102831,41260971,41167764,41292116,21104771,19124342,40134179,42543871,42543875,1511230,42543874,1511229,42543872,42543878,1511233,1710281,43202117,43180170,36813154,41245640,40865165,43212951,43212952,43037156,41301770,41089547,41152357,41226323,40720627,40927355,43202119,43202120,43147023,40720650,43037158,40720648,40720649,43212953,43180173,43037170,41057983,40720647,40896365,42927729,42927728,42927720,42927736,42927737,42927725,42927726,42927721,42927722,42927730,42927738,42927723,995223,36258999,42927731,42927739,42927735,42927733,42927724,43169082,36262483,36261430,43169084,43212955,41288218,41195246,44166854,41257155,41132577,44185539,44174336,40882847,44166855,41288215,44170586,44181824,40824389,41038514,40913803,41069781,36504821,37593516,43037165,43037163,43037162,43037160,43037164,43037161,43037159,41239851,37593512,37593513,37593515,37593514,36508021,36506462,42927697,42927707,42927706,42927698,42927714,42927715,42927703,42927699,42927700,42927708,42927712,995224,995225,36267644,36275271,36268634,42927709,42927717,42927710,42927713,41214714,40882849,41069786,44163052,41226321,41007448,40825633,40851568,40882846,40976105,41226319,44170585,41226318,40851565,40976104,40945117,40976102,41226322,40851567,41195245,36509195,40720628,37593520,42927711,42927718,42927702,36811452,36812767,41239853,40720633,40720636,40720635,40720629,43037169,43037167,40720632,43037166,40720631,40720634,43037168,40720630,40720637,36419350,41239852,40720642,40720645,40720644,37593517,40720638,40720641,37593519,37593518,995226,40720640,40720643,36507464,40720639,40720646,43589260,35156246,43661593,43733307,35146811,43516046,43515541,43180169,43158205,42705927,42708120,42708121,42705915,42705916,42708114,42708115,42705917,42705918,42708116,42708117,42705878,42705879,42708096,42708097,1710314,1710312,19098330,43212950,43136093,42705926,40133800,42927751,42927742,42927759,42927747,42927748,42927752,42927745,43733306,42927753,42927761,42927754,35133027,42927757,42927755,42927762)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (40708527,40708526,40708525,40706775,40706774,40706773,41430642,41430645,41430646,21108646,43198335,43197769,41502495,1729323,42941561,42941555,42941562,42941566,42941556,42941557,44055556,42941558,42941553,42941563,42941567,42941559,42941564,42941554,42941560,42941565,42941568,42941569,42941543,42941537,42941544,42941548,42941538,42941539,44100333,44039017,42941540,42941535,42941545,42941549,42941541,42941546,21065562,41232009,40950625,41169532,41318716,41325253,40950624,41200949,41200948,41044161,42941536,42941542,42941547,42941551,42941552,43172143,43183121,43150007,40168219,40168222,40168220,40168221,40133589,42941578,42941572,42941579,42941573,42941574,44070808,42941575,42941570,42941580,42941584,42941576,40133590,42941571,42941577,42941582,42941585,42941586,964015,1560078,21149330,43158209,42874221,42874222,36893513,21149331,21060949,21169052,21100249,21041342,43191063,43191064,43212957,43169085,35770064,43147024,21100250,21080573,21110077,41315791,44089712,41118016,42874226,42874224,42874225,43026751,35200464,35200465,43026753,43026754,43026756,43026757,43026758,43026755,35200467,35200466,35200468,43178107,36788478,40134707,782835,782836,35201132,964218,964224,21043604,782837,36788477,43210853,43144918,43210854,35764515,35747851,36788476,36788475,36788474,36788473,36788472,43156113,43026151,43026150,43026153,43026148,43026152,43026149,43026147,36788471,21161459,21023930,21102497,43026159,21112307,21171239,782838,782840,782842,782843,782844,782845,782846,21033713,43026156,40746924,43026155,43026158,40746925,43026157,40746923,43026154,782841,40746927,40746928,40746926,40971273,40855382,40917587,40855384,41323445,41323444,40825359,41136543,41073667,40886688,41136544,41252484,40855383,41323443,41148916,41148915,19124373,19124374,1510223,40166596,1510227,1703069,43212854,43190965,40241981,21134056,21094460,43202121,36503440,994686,43147025,36509698,994687,36814491,40124351,36882760,782823,782822,21114143,40827062,40929850,40971262,41086186,1703095,19042160,1703096,1703097,43194213,35606582,35606581,35606583,35606584,35606586,35606585,35606587,35606590,35606589,35606591,19103067,42965766,21055612,43190966,43202023,43212855,35772093,43190967,21143972,42965765,21143973,21104774,21085112,21173500,40860485,44115232,40909013,41159218,41136534,41167763,44171443,41260970,41323435,40940281,44186404,44186403,41242323,40961170,40241984,40241982,40241983,782825,782824,21143561,782831,782833,782826,782828,782829,782830,21173067,21035534,21104377,21094461,782834,36812938,36881718,43212958,43191065,43202122,43158210,43169086,43026164,43026163,43026166,43026161,43026165,43026162,43026160,36257199,36813059,36812153,36813248,36811149,36268197,36271211,40746910,36275044,40746915,40746911,43026169,40746914,43026168,43026171,40746913,43026167,43026170,40746912,40746916,40746921,40746917,40746920,40746919,40746918,40746922,41042358,40948925,40917580,41260969,41260968,40917578,41136533,40855375,40886680,41136532,40948924,41221487,44182671,41042359,40992430,40867643,19063361,19042159,19102500,19102831,41260971,41167764,41292116,21104771,19124342,40134179,42543871,42543875,1511230,42543874,1511229,42543872,42543878,1511233,1710281,43202117,43180170,36813154,41245640,40865165,43212951,43212952,43037156,41301770,41089547,41152357,41226323,40720627,40927355,43202119,43202120,43147023,40720650,43037158,40720648,40720649,43212953,43180173,43037170,41057983,40720647,40896365,42927729,42927728,42927720,42927736,42927737,42927725,42927726,42927721,42927722,42927730,42927738,42927723,995223,36258999,42927731,42927739,42927735,42927733,42927724,43169082,36262483,36261430,43169084,43212955,41288218,41195246,44166854,41257155,41132577,44185539,44174336,40882847,44166855,41288215,44170586,44181824,40824389,41038514,40913803,41069781,36504821,37593516,43037165,43037163,43037162,43037160,43037164,43037161,43037159,41239851,37593512,37593513,37593515,37593514,36508021,36506462,42927697,42927707,42927706,42927698,42927714,42927715,42927703,42927699,42927700,42927708,42927712,995224,995225,36267644,36275271,36268634,42927709,42927717,42927710,42927713,41214714,40882849,41069786,44163052,41226321,41007448,40825633,40851568,40882846,40976105,41226319,44170585,41226318,40851565,40976104,40945117,40976102,41226322,40851567,41195245,36509195,40720628,37593520,42927711,42927718,42927702,36811452,36812767,41239853,40720633,40720636,40720635,40720629,43037169,43037167,40720632,43037166,40720631,40720634,43037168,40720630,40720637,36419350,41239852,40720642,40720645,40720644,37593517,40720638,40720641,37593519,37593518,995226,40720640,40720643,36507464,40720639,40720646,43589260,35156246,43661593,43733307,35146811,43516046,43515541,43180169,43158205,42705927,42708120,42708121,42705915,42705916,42708114,42708115,42705917,42705918,42708116,42708117,42705878,42705879,42708096,42708097,1710314,1710312,19098330,43212950,43136093,42705926,40133800,42927751,42927742,42927759,42927747,42927748,42927752,42927745,43733306,42927753,42927761,42927754,35133027,42927757,42927755,42927762)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (438391)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (438391)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (438391)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (438391)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (133729)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (133729)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (133729)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (133729)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (35624485,140362,22856,4239780)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (35624485,140362,22856,4239780)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (35624485,140362,22856,4239780)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (35624485,140362,22856,4239780)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443611,193782)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443611,193782)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443611,193782)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443611,193782)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42539502)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42539502)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42539502)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42539502)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (197921)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (197921)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (197921)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (197921)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (193519)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (193519)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (193519)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (193519)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C UNION ALL 
SELECT 11 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4051328,4051329,4120120)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4051328,4051329,4120120)
  and c.invalid_reason is null
UNION
select distinct cr.concept_id_1 as concept_id
FROM
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4051328,4051329,4120120)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4051328,4051329,4120120)
  and c.invalid_reason is null

) C
join @vocabulary_database_schema.concept_relationship cr on C.concept_id = cr.concept_id_2 and cr.relationship_id = 'Maps to' and cr.invalid_reason IS NULL

) I
) C
;

with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE YEAR(C.condition_start_date) - P.year_of_birth > 18
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Era Criteria
select C.person_id, C.drug_era_id as event_id, C.drug_era_start_date as start_date, C.drug_era_end_date as end_date,
    CAST(NULL as bigint) as visit_occurrence_id,C.drug_era_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_ERA de
where de.drug_concept_id in (SELECT concept_id from  #Codesets where codeset_id = 1)
) C


-- End Drug Era Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  LEFT JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Era Criteria
select C.person_id, C.drug_era_id as event_id, C.drug_era_start_date as start_date, C.drug_era_end_date as end_date,
    CAST(NULL as bigint) as visit_occurrence_id,C.drug_era_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_ERA de
where de.drug_concept_id in (SELECT concept_id from  #Codesets where codeset_id = 3)
) C

WHERE DATEDIFF(d,C.drug_era_start_date, C.drug_era_end_date) > 180
-- End Drug Era Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) <= 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  LEFT JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) <= 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  LEFT JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) <= 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  LEFT JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) <= 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 6 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_6
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) <= 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.visit_occurrence_id, C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 11))
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) <= 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 7 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_7
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  LEFT JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) <= 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 8 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_8
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  LEFT JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 9))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) <= 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 9 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_9
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 10))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) <= 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_6
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_7
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_8
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_9) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;

TRUNCATE TABLE #Inclusion_6;
DROP TABLE #Inclusion_6;

TRUNCATE TABLE #Inclusion_7;
DROP TABLE #Inclusion_7;

TRUNCATE TABLE #Inclusion_8;
DROP TABLE #Inclusion_8;

TRUNCATE TABLE #Inclusion_9;
DROP TABLE #Inclusion_9;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),10)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
